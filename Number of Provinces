class Solution {
    public int findCircleNum(int[][] isConnected) {
        int n=isConnected.length;
        ArrayList<ArrayList<Integer>>adj=new ArrayList<>();
        for(int i=0;i<n;i++){
            adj.add(new ArrayList<>());
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]==1 && i!=j){
                    adj.get(i).add(j);
                    adj.get(j).add(i);
                }
            }
        }
        int count=0;
        boolean val[]=new boolean[n];
        for(int i=0;i<n;i++){
            if(val[i]==false){
                dfs(i,adj,val);
                count++;
            }
        }
        return count;
    }
    public static void dfs(int i,ArrayList<ArrayList<Integer>>adj,boolean val[]){
        val[i]=true;
        for(int it:adj.get(i)){
            if(val[it]==false){
               dfs(it,adj,val);
            }
        }
    }
}
