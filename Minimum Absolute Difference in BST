/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDiffInBST(TreeNode root) {
        if(root==null){
            return 0;
        }
      
        List<Integer>sc=new ArrayList<>();
        inorder(root,sc);
        int min=Integer.MAX_VALUE;
        for(int i=0;i<sc.size()-1;i++)
        {
            int m=Math.abs(sc.get(i)-sc.get(i+1));
            if(m<min)
                min=m;
        }
        
        return min;
    }
    public void inorder(TreeNode root,List<Integer>sc){
        
      if(root==null){
          return ;
      }
      inorder(root.left,sc);
      sc.add(root.val);
      inorder(root.right,sc);
      
    }
}
